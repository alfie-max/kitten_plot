#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'kitten_plot'
require 'csv'
require 'exifr/jpeg'
require 'pry'

CSV_COLUMN_TITLES = [
  'Latitude',
  'Longitude'
]

DEFAULT_IMAGE_DIR = [
  './gps_images'
]

rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/kitten_plot` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/kitten_plot now"
  exit 64
end

include GLI::App

program_desc 'Outputs location coordinates for the images provided'

version KittenPlot::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Get the coordinates of a kitten you want'
arg_name 'Provide the path to your image directory'

command :get_coordinates do |c|
  c.desc 'Describe a switch to get_coordinates'
  c.switch :s

  c.desc 'Describe a flag to get_coordinates'
  c.default_value 'default'
  c.flag :f

  c.action do |global_options,options,args|

    plot_catnapping_csv = CSV.open(@csv_filename, 'wb' ) do |csv|
      csv << CSV_COLUMN_TITLES

      @image_files.each do |image_file|
        @image_file = image_file
        csv << gps_coordinates
      end
    end
    plot_catnapping_csv
  end
  true
end

private

def gps_coordinates
  [latitude, longitude]
end

def latitude
  image_to_exif&.gps&.latitude
end

def longitude
  image_to_exif&.gps&.latitude
end

def image_to_exif
  EXIFR::JPEG.new(@image_file)
end

# desc 'Describe complete here'
# arg_name 'Describe arguments to complete here'
# command :complete do |c|
#   c.action do |global_options,options,args|
#     puts "complete command ran"
#   end
# end
#
pre do |global,command,options,args|
  # puts("global #{global}")
  # puts("command #{command}")
  # puts("options #{options}")
  # puts("args #{args}")

  path_to_image_files = args.present? ? args[0] : DEFAULT_IMAGE_DIR

  timestamp = Time.now.strftime('%Y%jT%H%MZ')

  @image_files = Dir.glob("#{path_to_image_files}/**/*.jpg")
  @csv_filename = "cat_burglery_targets_#{timestamp}"
  true
end

post do |global,command,options,args|
  puts "Successfully generated #{@csv_filename}"
  true
end

on_error do |exception|
  "An error has occurred"
  true
end

exit run(ARGV)
